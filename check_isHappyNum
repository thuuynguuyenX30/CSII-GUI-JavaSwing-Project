class Node {
    int data;
    Node next;

    public Node(int data){
        this.data = data;
        this.next = null;
    }
}

public class check_isHappyNum{
    private Node head; 

    public int getNext(int n){
        int totalSum = 0;
        while (n>0){
            int d = n%10;
            n = n/10;
            totalSum += d*d;
        }
        return totalSum;
    }

    public boolean isHappy(int n){
        head = new Node(n);
        Node current = head; 

        while (current.data != 1 && current.next == null){
            int nextValue = getNext(current.data);
            current.next = new Node(nextValue);
            current = current.next;
        }
        return current.data ==1; 

    }

    public void printHappySequence(int n){
        head = new Node(n);
        Node current = head;
        System.out.print(current.data);

        while (true){
            int nextValue = getNext(current.data);
            if (nextValue ==1 || contains(head, nextValue)){
                if (nextValue ==1){
                    System.out.println("-->" + nextValue + " Yay number is happy!");
                }
                else{
                    System.out.println("-->" + nextValue + "(cycle detected - Number is Unhappy :< )");

                }
                break;
            }
            System.out.print("-->" + nextValue);
            current.next = new Node(nextValue);
            current = current.next;
        }

    }
    private boolean contains(Node head, int value){
        Node current = head;
        while (current != null){
            if (current.data == value){
                return true;
            }
            current = current.next;
        }
        return false;
    }

    public boolean detect_cycle(){
        if (head == null){
            System.out.println("Not happy number!");
            return false;

        }
        Node slow = head;
        Node fast = head.next; 
        while (slow != fast){
            if (fast == null || fast.next == null){
                System.out.println("Number is Unhappy :< ");
                return false;
            }
            slow = slow.next;
            fast = fast.next.next;
        }
        System.out.println("true - Yay number is happy!");
        return true;
    }
    public static void main(String[] args){
        check_isHappyNum num = new check_isHappyNum();
        int number = 19884;
        num.printHappySequence(number);
        System.out.println("Is " + number + " happy? "+ num.isHappy(number));
    }
}

